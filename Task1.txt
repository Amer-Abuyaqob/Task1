Q1) Explain the purpose of the following Git commands:

a. [git status]:
Shows the current state of the working directory and staging area-- This shows:-
	* Untracked files (new files)
	* Modified files
	* Files already staged for commit.

b. [git init]:
Creates a new local Git repository in the current directory (folder) to start tracking changes.

c. [git commit]:
Saves (records) the staged changes into the local repository with a message describing what was changed.

d. [git push]:
Uploads the committed changes from rthe local repository to a remote repository.

*********************************************************************************
Q2) 

I disagree with Ahmed's statement

New (untracked) files are not automatically included in commits unless explicitly added with [git add].

The [git add] command stages changes, and allows to selectively choose which modifications to include in a commit.

Without staging we risk committing unintended changes.

*********************************************************************************
Q3) Answer the following questions about code hosting providers.

a. List two popular code hosting platforms besides GitHub.
	* GitLab
	* Bitbucket

b. What key features do code hosting providers offer to enhance version
control for both individual developers and collaborative development
environments?

	* Repository Hosting
	* Branch Management
	* Commit History & Diffs
	* Pull/Merge Requests
	* Issue Tracking & Project Boards
	* Forking & Cloning
	* Code Scanning

c. True or False: A team can collaborate on a software project without relying
on popular code hosting providers by setting up their own a self-hosted
server for version control.

True.
A team can absolutely collaborate on a software project without relying on platforms like GitHub, GitLab, or Bitbucket by self-hosting their own version control system.

*********************************************************************************
Q4) What does the -u flag in the git push -u origin main command signify, and
how does it impact the behavior of the git push and git pull commands in
subsequent usage?

The [-u] flag in the command [git push -u origin main] Links the local branch to the remote branch, telling Git:
"Use origin/main as the default remote counterpart for this local branch."

[git push] (without arguments)
Automatically pushes changes to the tracked remote branch (origin/main).
No need to specify origin main again.

[git pull] (without arguments)
Automatically fetches and merges changes from origin/main into your local branch.

Key Benefits:-
	
	* Simplifies Commands: No need to repeatedly specify the remote/branch.
	* Avoids Errors: Reduces mistakes from typos in remote/branch names.
	* Branch Awareness: git status will show if the local branch is ahead/behind its upstream counterpart.